// queryDsl
buildscript {
    dependencies {
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
    }
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.17'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'

    // queryDsl
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}



configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
    // JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

    // Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // MySql
    implementation 'mysql:mysql-connector-java:8.0.33'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    annotationProcessor(
        "javax.persistence:javax.persistence-api",
        "javax.annotation:javax.annotation-api",
        "com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

    // AWS
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

    //JWT
    implementation 'com.auth0:java-jwt:4.4.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
